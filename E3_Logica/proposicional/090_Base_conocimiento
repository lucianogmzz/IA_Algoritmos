# Luciano Alejandro Gómez Muñoz 22310214 6E2
# Sistema básico de base de conocimiento sin experta

class BaseConocimiento:
    def __init__(self):
        self.padres = []
        self.madres = []
        self.hermanos = set()

    def agregar_padre(self, padre, hijo):
        self.padres.append((padre, hijo))

    def agregar_madre(self, madre, hijo):
        self.madres.append((madre, hijo))

    def deducir_hermanos(self):
        hijos_padre = {}
        hijos_madre = {}

        for padre, hijo in self.padres:
            hijos_padre.setdefault(padre, set()).add(hijo)

        for madre, hijo in self.madres:
            hijos_madre.setdefault(madre, set()).add(hijo)

        # Buscar combinaciones con mismos padres y madres
        for padre, hijos_p in hijos_padre.items():
            for madre, hijos_m in hijos_madre.items():
                comunes = hijos_p & hijos_m
                for h1 in comunes:
                    for h2 in comunes:
                        if h1 != h2:
                            self.hermanos.add(tuple(sorted((h1, h2))))

    def mostrar_hechos(self):
        print("Padres:")
        for padre, hijo in self.padres:
            print(f"{padre} es padre de {hijo}")
        print("\nMadres:")
        for madre, hijo in self.madres:
            print(f"{madre} es madre de {hijo}")

        print("\nHermanos deducidos:")
        for h1, h2 in self.hermanos:
            print(f"{h1} y {h2} son hermanos")


# Uso del sistema
bc = BaseConocimiento()

# Hechos
bc.agregar_padre('Juan', 'Maria')
bc.agregar_padre('Juan', 'Pedro')
bc.agregar_madre('Ana', 'Maria')
bc.agregar_madre('Ana', 'Pedro')

# Inferencias
bc.deducir_hermanos()
bc.mostrar_hechos()
